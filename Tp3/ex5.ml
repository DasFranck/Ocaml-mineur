(* Prerequis *)
let rec append x y = match x with
  |[]    -> y
  |e::l  -> e::(append l y);;

let morse_to_alphanum x = match x with
  | ['.';'-']            -> 'A'
  | ['-';'.';'.';'.']    -> 'B'
  | ['-';'.';'-';'.']    -> 'C'
  | ['-';'.';'.']        -> 'D'
  | ['.']                -> 'E'
  | ['.';'.';'-';'.']    -> 'F'
  | ['-';'-';'.']        -> 'G'
  | ['.';'.';'.';'.']    -> 'H'
  | ['.';'.']            -> 'I'
  | ['.';'-';'-';'-']    -> 'J'
  | ['-';'.';'-']        -> 'K'
  | ['.';'-';'.';'.']    -> 'L'
  | ['-';'-']            -> 'M'
  | ['-';'.']            -> 'N'
  | ['-';'-';'-']        -> 'O'
  | ['.';'-';'-';'.']    -> 'P'
  | ['-';'-';'.';'-']    -> 'Q'
  | ['.';'-';'.']        -> 'R'
  | ['.';'.';'.']        -> 'S'
  | ['-']                -> 'T'
  | ['.';'.';'-']        -> 'U'
  | ['.';'.';'.';'-']    -> 'V'
  | ['.';'-';'-']        -> 'W'
  | ['-';'.';'.';'-']    -> 'X'
  | ['-';'.';'-';'-']    -> 'Y'
  | ['-';'-';'.';'.']    -> 'X'
  | ['/']                -> ' '
  | _                    -> [] 

(* 5. decodez moi tout ca! *)
let morse_to_latin mrs :
  let len = String.length mrs in
    let rec 
