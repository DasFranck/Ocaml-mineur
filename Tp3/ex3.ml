(* Prerequis*)
let rec append x y = match x with
  |[] -> y
  |e::l -> e::(append l y);; 
  
 let rec alphanum_to_morse x = match x with
  |'A'|'a' -> ['.';'-']
  |'B'|'b' -> ['-';'.';'.';'.']
  |'C'|'c' -> ['-';'.';'-';'.']
  |'D'|'d' -> ['-';'.';'.']
  |'E'|'e' -> ['.']
  |'F'|'f' -> ['.';'.';'-';'.']
  |'G'|'g' -> ['-';'-';'.']
  |'H'|'h' -> ['.';'.';'.';'.']
  |'I'|'i' -> ['.';'.']
  |'J'|'j' -> ['.';'-';'-';'-']
  |'K'|'k' -> ['-';'.';'-']
  |'L'|'l' -> ['.';'-';'.';'.']
  |'M'|'m' -> ['-';'-']
  |'N'|'n' -> ['-';'.']
  |'O'|'o' -> ['-';'-';'-']
  |'P'|'p' -> ['.';'-';'-';'.']
  |'Q'|'q' -> ['-';'-';'.';'-']
  |'R'|'r' -> ['.';'-';'.']
  |'S'|'s' -> ['.';'.';'.']
  |'T'|'t' -> ['-']
  |'U'|'u' -> ['.';'.';'-']
  |'V'|'v' -> ['.';'.';'.';'-']
  |'W'|'w' -> ['.';'-';'-']
  |'X'|'x' -> ['-';'.';'.';'-']
  |'Y'|'y' -> ['-';'.';'-';'-']
  |'Z'|'z' -> ['-';'-';'.';'.']
  |'0'     -> ['-';'-';'-';'-';'-']
  |'1'     -> ['.';'-';'-';'-';'-']
  |'2'     -> ['.';'.';'-';'-';'-']
  |'3'     -> ['.';'.';'.';'-';'-']
  |'4'     -> ['.';'.';'.';'.';'-']
  |'5'     -> ['.';'.';'.';'.';'.']
  |'6'     -> ['-';'.';'.';'.';'.']
  |'7'     -> ['-';'-';'.';'.';'.']
  |'8'     -> ['-';'-';'-';'.';'.']
  |'9'     -> ['-';'-';'-';'-';'.']
  |_       -> [];;

(* Conversion (encore) *)
let sentence_to_morse x = let rec stm s l = match l with
  |[] -> s
  |m::l -> stm 
